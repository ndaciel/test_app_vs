#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Core.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WYETH_FIELDSERVICE")]
	public partial class LINQDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWarehouse(Warehouse instance);
    partial void UpdateWarehouse(Warehouse instance);
    partial void DeleteWarehouse(Warehouse instance);
    partial void InsertCallPlan(CallPlan instance);
    partial void UpdateCallPlan(CallPlan instance);
    partial void DeleteCallPlan(CallPlan instance);
    partial void InsertCallPlanDetail(CallPlanDetail instance);
    partial void UpdateCallPlanDetail(CallPlanDetail instance);
    partial void DeleteCallPlanDetail(CallPlanDetail instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertCustomerImage(CustomerImage instance);
    partial void UpdateCustomerImage(CustomerImage instance);
    partial void DeleteCustomerImage(CustomerImage instance);
    partial void InsertCustomerType(CustomerType instance);
    partial void UpdateCustomerType(CustomerType instance);
    partial void DeleteCustomerType(CustomerType instance);
    partial void InsertDailyCost(DailyCost instance);
    partial void UpdateDailyCost(DailyCost instance);
    partial void DeleteDailyCost(DailyCost instance);
    partial void InsertDailyMessage(DailyMessage instance);
    partial void UpdateDailyMessage(DailyMessage instance);
    partial void DeleteDailyMessage(DailyMessage instance);
    partial void InsertDailyMessageDetail(DailyMessageDetail instance);
    partial void UpdateDailyMessageDetail(DailyMessageDetail instance);
    partial void DeleteDailyMessageDetail(DailyMessageDetail instance);
    partial void InsertDeliveryOrderDetail(DeliveryOrderDetail instance);
    partial void UpdateDeliveryOrderDetail(DeliveryOrderDetail instance);
    partial void DeleteDeliveryOrderDetail(DeliveryOrderDetail instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertEmployeeAndroidKey(EmployeeAndroidKey instance);
    partial void UpdateEmployeeAndroidKey(EmployeeAndroidKey instance);
    partial void DeleteEmployeeAndroidKey(EmployeeAndroidKey instance);
    partial void InsertEmployeeType(EmployeeType instance);
    partial void UpdateEmployeeType(EmployeeType instance);
    partial void DeleteEmployeeType(EmployeeType instance);
    partial void InsertLiveTracking(LiveTracking instance);
    partial void UpdateLiveTracking(LiveTracking instance);
    partial void DeleteLiveTracking(LiveTracking instance);
    partial void InsertLog_Notification(Log_Notification instance);
    partial void UpdateLog_Notification(Log_Notification instance);
    partial void DeleteLog_Notification(Log_Notification instance);
    partial void InsertLog_Service(Log_Service instance);
    partial void UpdateLog_Service(Log_Service instance);
    partial void DeleteLog_Service(Log_Service instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void InsertProductUOM(ProductUOM instance);
    partial void UpdateProductUOM(ProductUOM instance);
    partial void DeleteProductUOM(ProductUOM instance);
    partial void InsertReason(Reason instance);
    partial void UpdateReason(Reason instance);
    partial void DeleteReason(Reason instance);
    partial void InsertReturOrder(ReturOrder instance);
    partial void UpdateReturOrder(ReturOrder instance);
    partial void DeleteReturOrder(ReturOrder instance);
    partial void InsertReturOrderDetail(ReturOrderDetail instance);
    partial void UpdateReturOrderDetail(ReturOrderDetail instance);
    partial void DeleteReturOrderDetail(ReturOrderDetail instance);
    partial void InsertRoute(Route instance);
    partial void UpdateRoute(Route instance);
    partial void DeleteRoute(Route instance);
    partial void InsertRouteDetail(RouteDetail instance);
    partial void UpdateRouteDetail(RouteDetail instance);
    partial void DeleteRouteDetail(RouteDetail instance);
    partial void InsertSubVehicleType(SubVehicleType instance);
    partial void UpdateSubVehicleType(SubVehicleType instance);
    partial void DeleteSubVehicleType(SubVehicleType instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertVehicleType(VehicleType instance);
    partial void UpdateVehicleType(VehicleType instance);
    partial void DeleteVehicleType(VehicleType instance);
    partial void InsertVisitDetail(VisitDetail instance);
    partial void UpdateVisitDetail(VisitDetail instance);
    partial void DeleteVisitDetail(VisitDetail instance);
    partial void InsertMenu(Menu instance);
    partial void UpdateMenu(Menu instance);
    partial void DeleteMenu(Menu instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertMobileConfig(MobileConfig instance);
    partial void UpdateMobileConfig(MobileConfig instance);
    partial void DeleteMobileConfig(MobileConfig instance);
    partial void InsertCost(Cost instance);
    partial void UpdateCost(Cost instance);
    partial void DeleteCost(Cost instance);
    partial void InsertAccessRole(AccessRole instance);
    partial void UpdateAccessRole(AccessRole instance);
    partial void DeleteAccessRole(AccessRole instance);
    partial void InsertVisit(Visit instance);
    partial void UpdateVisit(Visit instance);
    partial void DeleteVisit(Visit instance);
    partial void InsertDeliveryOrder(DeliveryOrder instance);
    partial void UpdateDeliveryOrder(DeliveryOrder instance);
    partial void DeleteDeliveryOrder(DeliveryOrder instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertDistributor(Distributor instance);
    partial void UpdateDistributor(Distributor instance);
    partial void DeleteDistributor(Distributor instance);
    partial void InsertAccessRoleMobile(AccessRoleMobile instance);
    partial void UpdateAccessRoleMobile(AccessRoleMobile instance);
    partial void DeleteAccessRoleMobile(AccessRoleMobile instance);
    #endregion
		
		public LINQDataContext() : 
				base(global::Core.Properties.Settings.Default.WYETH_FIELDSERVICEConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Warehouse> Warehouses
		{
			get
			{
				return this.GetTable<Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<CallPlan> CallPlans
		{
			get
			{
				return this.GetTable<CallPlan>();
			}
		}
		
		public System.Data.Linq.Table<CallPlanDetail> CallPlanDetails
		{
			get
			{
				return this.GetTable<CallPlanDetail>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<CustomerImage> CustomerImages
		{
			get
			{
				return this.GetTable<CustomerImage>();
			}
		}
		
		public System.Data.Linq.Table<CustomerType> CustomerTypes
		{
			get
			{
				return this.GetTable<CustomerType>();
			}
		}
		
		public System.Data.Linq.Table<DailyCost> DailyCosts
		{
			get
			{
				return this.GetTable<DailyCost>();
			}
		}
		
		public System.Data.Linq.Table<DailyMessage> DailyMessages
		{
			get
			{
				return this.GetTable<DailyMessage>();
			}
		}
		
		public System.Data.Linq.Table<DailyMessageDetail> DailyMessageDetails
		{
			get
			{
				return this.GetTable<DailyMessageDetail>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryOrderDetail> DeliveryOrderDetails
		{
			get
			{
				return this.GetTable<DeliveryOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeAndroidKey> EmployeeAndroidKeys
		{
			get
			{
				return this.GetTable<EmployeeAndroidKey>();
			}
		}
		
		public System.Data.Linq.Table<EmployeeType> EmployeeTypes
		{
			get
			{
				return this.GetTable<EmployeeType>();
			}
		}
		
		public System.Data.Linq.Table<LiveTracking> LiveTrackings
		{
			get
			{
				return this.GetTable<LiveTracking>();
			}
		}
		
		public System.Data.Linq.Table<Log_Notification> Log_Notifications
		{
			get
			{
				return this.GetTable<Log_Notification>();
			}
		}
		
		public System.Data.Linq.Table<Log_Service> Log_Services
		{
			get
			{
				return this.GetTable<Log_Service>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<ProductUOM> ProductUOMs
		{
			get
			{
				return this.GetTable<ProductUOM>();
			}
		}
		
		public System.Data.Linq.Table<Reason> Reasons
		{
			get
			{
				return this.GetTable<Reason>();
			}
		}
		
		public System.Data.Linq.Table<ReturOrder> ReturOrders
		{
			get
			{
				return this.GetTable<ReturOrder>();
			}
		}
		
		public System.Data.Linq.Table<ReturOrderDetail> ReturOrderDetails
		{
			get
			{
				return this.GetTable<ReturOrderDetail>();
			}
		}
		
		public System.Data.Linq.Table<Route> Routes
		{
			get
			{
				return this.GetTable<Route>();
			}
		}
		
		public System.Data.Linq.Table<RouteDetail> RouteDetails
		{
			get
			{
				return this.GetTable<RouteDetail>();
			}
		}
		
		public System.Data.Linq.Table<SubVehicleType> SubVehicleTypes
		{
			get
			{
				return this.GetTable<SubVehicleType>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<VehicleType> VehicleTypes
		{
			get
			{
				return this.GetTable<VehicleType>();
			}
		}
		
		public System.Data.Linq.Table<VisitDetail> VisitDetails
		{
			get
			{
				return this.GetTable<VisitDetail>();
			}
		}
		
		public System.Data.Linq.Table<Menu> Menus
		{
			get
			{
				return this.GetTable<Menu>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<MobileConfig> MobileConfigs
		{
			get
			{
				return this.GetTable<MobileConfig>();
			}
		}
		
		public System.Data.Linq.Table<Cost> Costs
		{
			get
			{
				return this.GetTable<Cost>();
			}
		}
		
		public System.Data.Linq.Table<AccessRole> AccessRoles
		{
			get
			{
				return this.GetTable<AccessRole>();
			}
		}
		
		public System.Data.Linq.Table<Visit> Visits
		{
			get
			{
				return this.GetTable<Visit>();
			}
		}
		
		public System.Data.Linq.Table<DeliveryOrder> DeliveryOrders
		{
			get
			{
				return this.GetTable<DeliveryOrder>();
			}
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Distributor> Distributors
		{
			get
			{
				return this.GetTable<Distributor>();
			}
		}
		
		public System.Data.Linq.Table<AccessRoleMobile> AccessRoleMobiles
		{
			get
			{
				return this.GetTable<AccessRoleMobile>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Warehouse")]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarehouseID;
		
		private string _WarehouseName;
		
		private string _WarehouseAddress;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _CustomerID;
		
		private decimal _Radius;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnWarehouseNameChanging(string value);
    partial void OnWarehouseNameChanged();
    partial void OnWarehouseAddressChanging(string value);
    partial void OnWarehouseAddressChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnRadiusChanging(decimal value);
    partial void OnRadiusChanged();
    #endregion
		
		public Warehouse()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseName
		{
			get
			{
				return this._WarehouseName;
			}
			set
			{
				if ((this._WarehouseName != value))
				{
					this.OnWarehouseNameChanging(value);
					this.SendPropertyChanging();
					this._WarehouseName = value;
					this.SendPropertyChanged("WarehouseName");
					this.OnWarehouseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string WarehouseAddress
		{
			get
			{
				return this._WarehouseAddress;
			}
			set
			{
				if ((this._WarehouseAddress != value))
				{
					this.OnWarehouseAddressChanging(value);
					this.SendPropertyChanging();
					this._WarehouseAddress = value;
					this.SendPropertyChanged("WarehouseAddress");
					this.OnWarehouseAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(18,0) NOT NULL")]
		public decimal Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallPlan")]
	public partial class CallPlan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CallPlanID;
		
		private string _EmployeeID;
		
		private string _BranchID;
		
		private string _VehicleID;
		
		private System.DateTime _Date;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastDate;
		
		private string _CreatedBy;
		
		private string _LastUpdateBy;
		
		private bool _IsFinish;
		
		private EntitySet<CallPlanDetail> _CallPlanDetails;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCallPlanIDChanging(string value);
    partial void OnCallPlanIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnVehicleIDChanging(string value);
    partial void OnVehicleIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastDateChanging(System.DateTime value);
    partial void OnLastDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    partial void OnIsFinishChanging(bool value);
    partial void OnIsFinishChanged();
    #endregion
		
		public CallPlan()
		{
			this._CallPlanDetails = new EntitySet<CallPlanDetail>(new Action<CallPlanDetail>(this.attach_CallPlanDetails), new Action<CallPlanDetail>(this.detach_CallPlanDetails));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPlanID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CallPlanID
		{
			get
			{
				return this._CallPlanID;
			}
			set
			{
				if ((this._CallPlanID != value))
				{
					this.OnCallPlanIDChanging(value);
					this.SendPropertyChanging();
					this._CallPlanID = value;
					this.SendPropertyChanged("CallPlanID");
					this.OnCallPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFinish", DbType="Bit NOT NULL")]
		public bool IsFinish
		{
			get
			{
				return this._IsFinish;
			}
			set
			{
				if ((this._IsFinish != value))
				{
					this.OnIsFinishChanging(value);
					this.SendPropertyChanging();
					this._IsFinish = value;
					this.SendPropertyChanged("IsFinish");
					this.OnIsFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallPlan_CallPlanDetail", Storage="_CallPlanDetails", ThisKey="CallPlanID", OtherKey="CallPlanID")]
		public EntitySet<CallPlanDetail> CallPlanDetails
		{
			get
			{
				return this._CallPlanDetails;
			}
			set
			{
				this._CallPlanDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CallPlan", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.CallPlans.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.CallPlans.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallPlanDetails(CallPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.CallPlan = this;
		}
		
		private void detach_CallPlanDetails(CallPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.CallPlan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CallPlanDetail")]
	public partial class CallPlanDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CPDetailID;
		
		private string _CallPlanID;
		
		private string _CustomerID;
		
		private string _WarehouseID;
		
		private int _Sequence;
		
		private EntityRef<CallPlan> _CallPlan;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCPDetailIDChanging(int value);
    partial void OnCPDetailIDChanged();
    partial void OnCallPlanIDChanging(string value);
    partial void OnCallPlanIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnSequenceChanging(int value);
    partial void OnSequenceChanged();
    #endregion
		
		public CallPlanDetail()
		{
			this._CallPlan = default(EntityRef<CallPlan>);
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CPDetailID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CPDetailID
		{
			get
			{
				return this._CPDetailID;
			}
			set
			{
				if ((this._CPDetailID != value))
				{
					this.OnCPDetailIDChanging(value);
					this.SendPropertyChanging();
					this._CPDetailID = value;
					this.SendPropertyChanged("CPDetailID");
					this.OnCPDetailIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPlanID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CallPlanID
		{
			get
			{
				return this._CallPlanID;
			}
			set
			{
				if ((this._CallPlanID != value))
				{
					if (this._CallPlan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCallPlanIDChanging(value);
					this.SendPropertyChanging();
					this._CallPlanID = value;
					this.SendPropertyChanged("CallPlanID");
					this.OnCallPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sequence", DbType="Int NOT NULL")]
		public int Sequence
		{
			get
			{
				return this._Sequence;
			}
			set
			{
				if ((this._Sequence != value))
				{
					this.OnSequenceChanging(value);
					this.SendPropertyChanging();
					this._Sequence = value;
					this.SendPropertyChanged("Sequence");
					this.OnSequenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CallPlan_CallPlanDetail", Storage="_CallPlan", ThisKey="CallPlanID", OtherKey="CallPlanID", IsForeignKey=true)]
		public CallPlan CallPlan
		{
			get
			{
				return this._CallPlan.Entity;
			}
			set
			{
				CallPlan previousValue = this._CallPlan.Entity;
				if (((previousValue != value) 
							|| (this._CallPlan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CallPlan.Entity = null;
						previousValue.CallPlanDetails.Remove(this);
					}
					this._CallPlan.Entity = value;
					if ((value != null))
					{
						value.CallPlanDetails.Add(this);
						this._CallPlanID = value.CallPlanID;
					}
					else
					{
						this._CallPlanID = default(string);
					}
					this.SendPropertyChanged("CallPlan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CallPlanDetail", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.CallPlanDetails.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.CallPlanDetails.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Company")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CompanyID;
		
		private string _CompanyName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    #endregion
		
		public Company()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iId;
		
		private string _CustomerID;
		
		private string _CustomerName;
		
		private string _CustomerAddress;
		
		private string _Phone;
		
		private string _PIC;
		
		private string _CustomerTypeID;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _BranchID;
		
		private decimal _Radius;
		
		private EntitySet<CallPlanDetail> _CallPlanDetails;
		
		private EntitySet<DailyCost> _DailyCosts;
		
		private EntitySet<RouteDetail> _RouteDetails;
		
		private EntitySet<VisitDetail> _VisitDetails;
		
		private EntityRef<CustomerType> _CustomerType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniIdChanging(int value);
    partial void OniIdChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnCustomerAddressChanging(string value);
    partial void OnCustomerAddressChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPICChanging(string value);
    partial void OnPICChanged();
    partial void OnCustomerTypeIDChanging(string value);
    partial void OnCustomerTypeIDChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnRadiusChanging(decimal value);
    partial void OnRadiusChanged();
    #endregion
		
		public Customer()
		{
			this._CallPlanDetails = new EntitySet<CallPlanDetail>(new Action<CallPlanDetail>(this.attach_CallPlanDetails), new Action<CallPlanDetail>(this.detach_CallPlanDetails));
			this._DailyCosts = new EntitySet<DailyCost>(new Action<DailyCost>(this.attach_DailyCosts), new Action<DailyCost>(this.detach_DailyCosts));
			this._RouteDetails = new EntitySet<RouteDetail>(new Action<RouteDetail>(this.attach_RouteDetails), new Action<RouteDetail>(this.detach_RouteDetails));
			this._VisitDetails = new EntitySet<VisitDetail>(new Action<VisitDetail>(this.attach_VisitDetails), new Action<VisitDetail>(this.detach_VisitDetails));
			this._CustomerType = default(EntityRef<CustomerType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int iId
		{
			get
			{
				return this._iId;
			}
			set
			{
				if ((this._iId != value))
				{
					this.OniIdChanging(value);
					this.SendPropertyChanging();
					this._iId = value;
					this.SendPropertyChanged("iId");
					this.OniIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerAddress", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CustomerAddress
		{
			get
			{
				return this._CustomerAddress;
			}
			set
			{
				if ((this._CustomerAddress != value))
				{
					this.OnCustomerAddressChanging(value);
					this.SendPropertyChanging();
					this._CustomerAddress = value;
					this.SendPropertyChanged("CustomerAddress");
					this.OnCustomerAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PIC", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PIC
		{
			get
			{
				return this._PIC;
			}
			set
			{
				if ((this._PIC != value))
				{
					this.OnPICChanging(value);
					this.SendPropertyChanging();
					this._PIC = value;
					this.SendPropertyChanged("PIC");
					this.OnPICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					if (this._CustomerType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radius", DbType="Decimal(18,0) NOT NULL")]
		public decimal Radius
		{
			get
			{
				return this._Radius;
			}
			set
			{
				if ((this._Radius != value))
				{
					this.OnRadiusChanging(value);
					this.SendPropertyChanging();
					this._Radius = value;
					this.SendPropertyChanged("Radius");
					this.OnRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_CallPlanDetail", Storage="_CallPlanDetails", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<CallPlanDetail> CallPlanDetails
		{
			get
			{
				return this._CallPlanDetails;
			}
			set
			{
				this._CallPlanDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DailyCost", Storage="_DailyCosts", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<DailyCost> DailyCosts
		{
			get
			{
				return this._DailyCosts;
			}
			set
			{
				this._DailyCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_RouteDetail", Storage="_RouteDetails", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<RouteDetail> RouteDetails
		{
			get
			{
				return this._RouteDetails;
			}
			set
			{
				this._RouteDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_VisitDetail", Storage="_VisitDetails", ThisKey="CustomerID", OtherKey="CustomerID")]
		public EntitySet<VisitDetail> VisitDetails
		{
			get
			{
				return this._VisitDetails;
			}
			set
			{
				this._VisitDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_CustomerType", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID", IsForeignKey=true)]
		public CustomerType CustomerType
		{
			get
			{
				return this._CustomerType.Entity;
			}
			set
			{
				CustomerType previousValue = this._CustomerType.Entity;
				if (((previousValue != value) 
							|| (this._CustomerType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CustomerType.Entity = null;
						previousValue.Customers.Remove(this);
					}
					this._CustomerType.Entity = value;
					if ((value != null))
					{
						value.Customers.Add(this);
						this._CustomerTypeID = value.CustomerTypeID;
					}
					else
					{
						this._CustomerTypeID = default(string);
					}
					this.SendPropertyChanged("CustomerType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallPlanDetails(CallPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_CallPlanDetails(CallPlanDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_DailyCosts(DailyCost entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_DailyCosts(DailyCost entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_RouteDetails(RouteDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_RouteDetails(RouteDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
		
		private void attach_VisitDetails(VisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_VisitDetails(VisitDetail entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerImage")]
	public partial class CustomerImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ImageID;
		
		private string _DocNumber;
		
		private string _VisitID;
		
		private string _CustomerID;
		
		private string _WarehouseID;
		
		private System.DateTime _ImageDate;
		
		private string _ImageBase64;
		
		private string _ImagePath;
		
		private string _ImageType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(string value);
    partial void OnImageIDChanged();
    partial void OnDocNumberChanging(string value);
    partial void OnDocNumberChanged();
    partial void OnVisitIDChanging(string value);
    partial void OnVisitIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnImageDateChanging(System.DateTime value);
    partial void OnImageDateChanged();
    partial void OnImageBase64Changing(string value);
    partial void OnImageBase64Changed();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnImageTypeChanging(string value);
    partial void OnImageTypeChanged();
    #endregion
		
		public CustomerImage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", DbType="NVarChar(200) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DocNumber
		{
			get
			{
				return this._DocNumber;
			}
			set
			{
				if ((this._DocNumber != value))
				{
					this.OnDocNumberChanging(value);
					this.SendPropertyChanging();
					this._DocNumber = value;
					this.SendPropertyChanged("DocNumber");
					this.OnDocNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageDate", DbType="DateTime NOT NULL")]
		public System.DateTime ImageDate
		{
			get
			{
				return this._ImageDate;
			}
			set
			{
				if ((this._ImageDate != value))
				{
					this.OnImageDateChanging(value);
					this.SendPropertyChanging();
					this._ImageDate = value;
					this.SendPropertyChanged("ImageDate");
					this.OnImageDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageBase64", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string ImageBase64
		{
			get
			{
				return this._ImageBase64;
			}
			set
			{
				if ((this._ImageBase64 != value))
				{
					this.OnImageBase64Changing(value);
					this.SendPropertyChanging();
					this._ImageBase64 = value;
					this.SendPropertyChanged("ImageBase64");
					this.OnImageBase64Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageType", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string ImageType
		{
			get
			{
				return this._ImageType;
			}
			set
			{
				if ((this._ImageType != value))
				{
					this.OnImageTypeChanging(value);
					this.SendPropertyChanging();
					this._ImageType = value;
					this.SendPropertyChanged("ImageType");
					this.OnImageTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CustomerType")]
	public partial class CustomerType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CustomerTypeID;
		
		private string _CustomerTypeName;
		
		private string _Description;
		
		private EntitySet<Customer> _Customers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomerTypeIDChanging(string value);
    partial void OnCustomerTypeIDChanged();
    partial void OnCustomerTypeNameChanging(string value);
    partial void OnCustomerTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public CustomerType()
		{
			this._Customers = new EntitySet<Customer>(new Action<Customer>(this.attach_Customers), new Action<Customer>(this.detach_Customers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerTypeID
		{
			get
			{
				return this._CustomerTypeID;
			}
			set
			{
				if ((this._CustomerTypeID != value))
				{
					this.OnCustomerTypeIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeID = value;
					this.SendPropertyChanged("CustomerTypeID");
					this.OnCustomerTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerTypeName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CustomerTypeName
		{
			get
			{
				return this._CustomerTypeName;
			}
			set
			{
				if ((this._CustomerTypeName != value))
				{
					this.OnCustomerTypeNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerTypeName = value;
					this.SendPropertyChanged("CustomerTypeName");
					this.OnCustomerTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CustomerType_Customer", Storage="_Customers", ThisKey="CustomerTypeID", OtherKey="CustomerTypeID")]
		public EntitySet<Customer> Customers
		{
			get
			{
				return this._Customers;
			}
			set
			{
				this._Customers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = this;
		}
		
		private void detach_Customers(Customer entity)
		{
			this.SendPropertyChanging();
			entity.CustomerType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailyCost")]
	public partial class DailyCost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DailyCostID;
		
		private string _CostID;
		
		private string _CustomerID;
		
		private string _WarehouseID;
		
		private string _EmployeeID;
		
		private string _VisitID;
		
		private System.DateTime _Date;
		
		private decimal _CostValue;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Cost> _Cost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDailyCostIDChanging(string value);
    partial void OnDailyCostIDChanged();
    partial void OnCostIDChanging(string value);
    partial void OnCostIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnVisitIDChanging(string value);
    partial void OnVisitIDChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnCostValueChanging(decimal value);
    partial void OnCostValueChanged();
    #endregion
		
		public DailyCost()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Employee = default(EntityRef<Employee>);
			this._Cost = default(EntityRef<Cost>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DailyCostID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DailyCostID
		{
			get
			{
				return this._DailyCostID;
			}
			set
			{
				if ((this._DailyCostID != value))
				{
					this.OnDailyCostIDChanging(value);
					this.SendPropertyChanging();
					this._DailyCostID = value;
					this.SendPropertyChanged("DailyCostID");
					this.OnDailyCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CostID
		{
			get
			{
				return this._CostID;
			}
			set
			{
				if ((this._CostID != value))
				{
					if (this._Cost.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostIDChanging(value);
					this.SendPropertyChanging();
					this._CostID = value;
					this.SendPropertyChanged("CostID");
					this.OnCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostValue", DbType="Decimal(18,0) NOT NULL")]
		public decimal CostValue
		{
			get
			{
				return this._CostValue;
			}
			set
			{
				if ((this._CostValue != value))
				{
					this.OnCostValueChanging(value);
					this.SendPropertyChanging();
					this._CostValue = value;
					this.SendPropertyChanged("CostValue");
					this.OnCostValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_DailyCost", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.DailyCosts.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.DailyCosts.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DailyCost", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.DailyCosts.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.DailyCosts.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_DailyCost", Storage="_Cost", ThisKey="CostID", OtherKey="CostID", IsForeignKey=true)]
		public Cost Cost
		{
			get
			{
				return this._Cost.Entity;
			}
			set
			{
				Cost previousValue = this._Cost.Entity;
				if (((previousValue != value) 
							|| (this._Cost.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cost.Entity = null;
						previousValue.DailyCosts.Remove(this);
					}
					this._Cost.Entity = value;
					if ((value != null))
					{
						value.DailyCosts.Add(this);
						this._CostID = value.CostID;
					}
					else
					{
						this._CostID = default(string);
					}
					this.SendPropertyChanged("Cost");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailyMessage")]
	public partial class DailyMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MessageID;
		
		private string _MessageName;
		
		private string _MessageDesc;
		
		private string _MessageImg;
		
		private string _ImgPath;
		
		private System.DateTime _Date;
		
		private System.DateTime _EndDate;
		
		private string _CreatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(string value);
    partial void OnMessageIDChanged();
    partial void OnMessageNameChanging(string value);
    partial void OnMessageNameChanged();
    partial void OnMessageDescChanging(string value);
    partial void OnMessageDescChanged();
    partial void OnMessageImgChanging(string value);
    partial void OnMessageImgChanged();
    partial void OnImgPathChanging(string value);
    partial void OnImgPathChanged();
    partial void OnDateChanging(System.DateTime value);
    partial void OnDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    #endregion
		
		public DailyMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MessageName
		{
			get
			{
				return this._MessageName;
			}
			set
			{
				if ((this._MessageName != value))
				{
					this.OnMessageNameChanging(value);
					this.SendPropertyChanging();
					this._MessageName = value;
					this.SendPropertyChanged("MessageName");
					this.OnMessageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageDesc", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MessageDesc
		{
			get
			{
				return this._MessageDesc;
			}
			set
			{
				if ((this._MessageDesc != value))
				{
					this.OnMessageDescChanging(value);
					this.SendPropertyChanging();
					this._MessageDesc = value;
					this.SendPropertyChanged("MessageDesc");
					this.OnMessageDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageImg", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MessageImg
		{
			get
			{
				return this._MessageImg;
			}
			set
			{
				if ((this._MessageImg != value))
				{
					this.OnMessageImgChanging(value);
					this.SendPropertyChanging();
					this._MessageImg = value;
					this.SendPropertyChanged("MessageImg");
					this.OnMessageImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgPath", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ImgPath
		{
			get
			{
				return this._ImgPath;
			}
			set
			{
				if ((this._ImgPath != value))
				{
					this.OnImgPathChanging(value);
					this.SendPropertyChanging();
					this._ImgPath = value;
					this.SendPropertyChanged("ImgPath");
					this.OnImgPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DailyMessageDetail")]
	public partial class DailyMessageDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MessageID;
		
		private string _EmployeeID;
		
		private string _BranchID;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(string value);
    partial void OnMessageIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    #endregion
		
		public DailyMessageDetail()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MessageID
		{
			get
			{
				return this._MessageID;
			}
			set
			{
				if ((this._MessageID != value))
				{
					this.OnMessageIDChanging(value);
					this.SendPropertyChanging();
					this._MessageID = value;
					this.SendPropertyChanged("MessageID");
					this.OnMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DailyMessageDetail", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.DailyMessageDetails.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.DailyMessageDetails.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryOrderDetail")]
	public partial class DeliveryOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DONumber;
		
		private string _ProductID;
		
		private string _UOM;
		
		private int _Quantity;
		
		private int _QuantityReal;
		
		private string _ProductGroup;
		
		private string _LotNumber;
		
		private string _ReasonID;
		
		private string _BoxID;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDONumberChanging(string value);
    partial void OnDONumberChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnQuantityRealChanging(int value);
    partial void OnQuantityRealChanged();
    partial void OnProductGroupChanging(string value);
    partial void OnProductGroupChanged();
    partial void OnLotNumberChanging(string value);
    partial void OnLotNumberChanged();
    partial void OnReasonIDChanging(string value);
    partial void OnReasonIDChanged();
    partial void OnBoxIDChanging(string value);
    partial void OnBoxIDChanged();
    #endregion
		
		public DeliveryOrderDetail()
		{
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DONumber
		{
			get
			{
				return this._DONumber;
			}
			set
			{
				if ((this._DONumber != value))
				{
					this.OnDONumberChanging(value);
					this.SendPropertyChanging();
					this._DONumber = value;
					this.SendPropertyChanged("DONumber");
					this.OnDONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityReal", DbType="Int NOT NULL")]
		public int QuantityReal
		{
			get
			{
				return this._QuantityReal;
			}
			set
			{
				if ((this._QuantityReal != value))
				{
					this.OnQuantityRealChanging(value);
					this.SendPropertyChanging();
					this._QuantityReal = value;
					this.SendPropertyChanged("QuantityReal");
					this.OnQuantityRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroup", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string ProductGroup
		{
			get
			{
				return this._ProductGroup;
			}
			set
			{
				if ((this._ProductGroup != value))
				{
					this.OnProductGroupChanging(value);
					this.SendPropertyChanging();
					this._ProductGroup = value;
					this.SendPropertyChanged("ProductGroup");
					this.OnProductGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LotNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string LotNumber
		{
			get
			{
				return this._LotNumber;
			}
			set
			{
				if ((this._LotNumber != value))
				{
					this.OnLotNumberChanging(value);
					this.SendPropertyChanging();
					this._LotNumber = value;
					this.SendPropertyChanged("LotNumber");
					this.OnLotNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BoxID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BoxID
		{
			get
			{
				return this._BoxID;
			}
			set
			{
				if ((this._BoxID != value))
				{
					this.OnBoxIDChanging(value);
					this.SendPropertyChanging();
					this._BoxID = value;
					this.SendPropertyChanged("BoxID");
					this.OnBoxIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DeliveryOrderDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.DeliveryOrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.DeliveryOrderDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _EmployeeName;
		
		private string _EmployeeTypeID;
		
		private string _BranchID;
		
		private EntitySet<CallPlan> _CallPlans;
		
		private EntitySet<DailyCost> _DailyCosts;
		
		private EntitySet<DailyMessageDetail> _DailyMessageDetails;
		
		private EntitySet<LiveTracking> _LiveTrackings;
		
		private EntityRef<EmployeeType> _EmployeeType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnEmployeeTypeIDChanging(string value);
    partial void OnEmployeeTypeIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    #endregion
		
		public Employee()
		{
			this._CallPlans = new EntitySet<CallPlan>(new Action<CallPlan>(this.attach_CallPlans), new Action<CallPlan>(this.detach_CallPlans));
			this._DailyCosts = new EntitySet<DailyCost>(new Action<DailyCost>(this.attach_DailyCosts), new Action<DailyCost>(this.detach_DailyCosts));
			this._DailyMessageDetails = new EntitySet<DailyMessageDetail>(new Action<DailyMessageDetail>(this.attach_DailyMessageDetails), new Action<DailyMessageDetail>(this.detach_DailyMessageDetails));
			this._LiveTrackings = new EntitySet<LiveTracking>(new Action<LiveTracking>(this.attach_LiveTrackings), new Action<LiveTracking>(this.detach_LiveTrackings));
			this._EmployeeType = default(EntityRef<EmployeeType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeTypeID
		{
			get
			{
				return this._EmployeeTypeID;
			}
			set
			{
				if ((this._EmployeeTypeID != value))
				{
					if (this._EmployeeType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeID = value;
					this.SendPropertyChanged("EmployeeTypeID");
					this.OnEmployeeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_CallPlan", Storage="_CallPlans", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<CallPlan> CallPlans
		{
			get
			{
				return this._CallPlans;
			}
			set
			{
				this._CallPlans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DailyCost", Storage="_DailyCosts", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<DailyCost> DailyCosts
		{
			get
			{
				return this._DailyCosts;
			}
			set
			{
				this._DailyCosts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_DailyMessageDetail", Storage="_DailyMessageDetails", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<DailyMessageDetail> DailyMessageDetails
		{
			get
			{
				return this._DailyMessageDetails;
			}
			set
			{
				this._DailyMessageDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LiveTracking", Storage="_LiveTrackings", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<LiveTracking> LiveTrackings
		{
			get
			{
				return this._LiveTrackings;
			}
			set
			{
				this._LiveTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeType_Employee", Storage="_EmployeeType", ThisKey="EmployeeTypeID", OtherKey="EmployeeTypeID", IsForeignKey=true)]
		public EmployeeType EmployeeType
		{
			get
			{
				return this._EmployeeType.Entity;
			}
			set
			{
				EmployeeType previousValue = this._EmployeeType.Entity;
				if (((previousValue != value) 
							|| (this._EmployeeType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EmployeeType.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._EmployeeType.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._EmployeeTypeID = value.EmployeeTypeID;
					}
					else
					{
						this._EmployeeTypeID = default(string);
					}
					this.SendPropertyChanged("EmployeeType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CallPlans(CallPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_CallPlans(CallPlan entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_DailyCosts(DailyCost entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_DailyCosts(DailyCost entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_DailyMessageDetails(DailyMessageDetail entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_DailyMessageDetails(DailyMessageDetail entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_LiveTrackings(LiveTracking entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_LiveTrackings(LiveTracking entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeAndroidKey")]
	public partial class EmployeeAndroidKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _AndroidKey;
		
		private string _BranchID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnAndroidKeyChanging(string value);
    partial void OnAndroidKeyChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    #endregion
		
		public EmployeeAndroidKey()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AndroidKey", DbType="NVarChar(MAX)")]
		public string AndroidKey
		{
			get
			{
				return this._AndroidKey;
			}
			set
			{
				if ((this._AndroidKey != value))
				{
					this.OnAndroidKeyChanging(value);
					this.SendPropertyChanging();
					this._AndroidKey = value;
					this.SendPropertyChanged("AndroidKey");
					this.OnAndroidKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EmployeeType")]
	public partial class EmployeeType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeTypeID;
		
		private string _EmployeeTypeName;
		
		private string _Description;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeTypeIDChanging(string value);
    partial void OnEmployeeTypeIDChanged();
    partial void OnEmployeeTypeNameChanging(string value);
    partial void OnEmployeeTypeNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public EmployeeType()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeTypeID
		{
			get
			{
				return this._EmployeeTypeID;
			}
			set
			{
				if ((this._EmployeeTypeID != value))
				{
					this.OnEmployeeTypeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeID = value;
					this.SendPropertyChanged("EmployeeTypeID");
					this.OnEmployeeTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTypeName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string EmployeeTypeName
		{
			get
			{
				return this._EmployeeTypeName;
			}
			set
			{
				if ((this._EmployeeTypeName != value))
				{
					this.OnEmployeeTypeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTypeName = value;
					this.SendPropertyChanged("EmployeeTypeName");
					this.OnEmployeeTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EmployeeType_Employee", Storage="_Employees", ThisKey="EmployeeTypeID", OtherKey="EmployeeTypeID")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeType = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.EmployeeType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LiveTracking")]
	public partial class LiveTracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrackingID;
		
		private System.DateTime _TrackingDate;
		
		private string _VehicleID;
		
		private string _EmployeeID;
		
		private string _Longitude;
		
		private string _Latitude;
		
		private string _BranchID;
		
		private EntityRef<Employee> _Employee;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrackingIDChanging(string value);
    partial void OnTrackingIDChanged();
    partial void OnTrackingDateChanging(System.DateTime value);
    partial void OnTrackingDateChanged();
    partial void OnVehicleIDChanging(string value);
    partial void OnVehicleIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    #endregion
		
		public LiveTracking()
		{
			this._Employee = default(EntityRef<Employee>);
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrackingID
		{
			get
			{
				return this._TrackingID;
			}
			set
			{
				if ((this._TrackingID != value))
				{
					this.OnTrackingIDChanging(value);
					this.SendPropertyChanging();
					this._TrackingID = value;
					this.SendPropertyChanged("TrackingID");
					this.OnTrackingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingDate", DbType="DateTime NOT NULL")]
		public System.DateTime TrackingDate
		{
			get
			{
				return this._TrackingDate;
			}
			set
			{
				if ((this._TrackingDate != value))
				{
					this.OnTrackingDateChanging(value);
					this.SendPropertyChanging();
					this._TrackingDate = value;
					this.SendPropertyChanged("TrackingDate");
					this.OnTrackingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_LiveTracking", Storage="_Employee", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.LiveTrackings.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.LiveTrackings.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_LiveTracking", Storage="_Vehicle", ThisKey="VehicleID", OtherKey="VehicleID", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.LiveTrackings.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.LiveTrackings.Add(this);
						this._VehicleID = value.VehicleID;
					}
					else
					{
						this._VehicleID = default(string);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log_Notification")]
	public partial class Log_Notification : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _Action;
		
		private byte _Sent;
		
		private byte _Recieved;
		
		private System.DateTime _CreatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnActionChanging(string value);
    partial void OnActionChanged();
    partial void OnSentChanging(byte value);
    partial void OnSentChanged();
    partial void OnRecievedChanging(byte value);
    partial void OnRecievedChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Log_Notification()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Action", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Action
		{
			get
			{
				return this._Action;
			}
			set
			{
				if ((this._Action != value))
				{
					this.OnActionChanging(value);
					this.SendPropertyChanging();
					this._Action = value;
					this.SendPropertyChanged("Action");
					this.OnActionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sent", DbType="TinyInt NOT NULL")]
		public byte Sent
		{
			get
			{
				return this._Sent;
			}
			set
			{
				if ((this._Sent != value))
				{
					this.OnSentChanging(value);
					this.SendPropertyChanging();
					this._Sent = value;
					this.SendPropertyChanged("Sent");
					this.OnSentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Recieved", DbType="TinyInt NOT NULL")]
		public byte Recieved
		{
			get
			{
				return this._Recieved;
			}
			set
			{
				if ((this._Recieved != value))
				{
					this.OnRecievedChanging(value);
					this.SendPropertyChanging();
					this._Recieved = value;
					this.SendPropertyChanged("Recieved");
					this.OnRecievedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Log_Service")]
	public partial class Log_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogID;
		
		private string _FunctionName;
		
		private string _Json;
		
		private System.DateTime _Timestamp;
		
		private string _CreatedBy;
		
		private string _Result;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIDChanging(int value);
    partial void OnLogIDChanged();
    partial void OnFunctionNameChanging(string value);
    partial void OnFunctionNameChanged();
    partial void OnJsonChanging(string value);
    partial void OnJsonChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnResultChanging(string value);
    partial void OnResultChanged();
    #endregion
		
		public Log_Service()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogID
		{
			get
			{
				return this._LogID;
			}
			set
			{
				if ((this._LogID != value))
				{
					this.OnLogIDChanging(value);
					this.SendPropertyChanging();
					this._LogID = value;
					this.SendPropertyChanged("LogID");
					this.OnLogIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FunctionName
		{
			get
			{
				return this._FunctionName;
			}
			set
			{
				if ((this._FunctionName != value))
				{
					this.OnFunctionNameChanging(value);
					this.SendPropertyChanging();
					this._FunctionName = value;
					this.SendPropertyChanged("FunctionName");
					this.OnFunctionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Json", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Json
		{
			get
			{
				return this._Json;
			}
			set
			{
				if ((this._Json != value))
				{
					this.OnJsonChanging(value);
					this.SendPropertyChanging();
					this._Json = value;
					this.SendPropertyChanged("Json");
					this.OnJsonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
		public System.DateTime Timestamp
		{
			get
			{
				return this._Timestamp;
			}
			set
			{
				if ((this._Timestamp != value))
				{
					this.OnTimestampChanging(value);
					this.SendPropertyChanging();
					this._Timestamp = value;
					this.SendPropertyChanged("Timestamp");
					this.OnTimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Result", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Result
		{
			get
			{
				return this._Result;
			}
			set
			{
				if ((this._Result != value))
				{
					this.OnResultChanging(value);
					this.SendPropertyChanging();
					this._Result = value;
					this.SendPropertyChanged("Result");
					this.OnResultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ProductID;
		
		private string _ProductName;
		
		private string _ProductType;
		
		private string _ProductGroup;
		
		private int _ProductWeight;
		
		private string _UOM;
		
		private string _ArticleNumber;
		
		private EntitySet<DeliveryOrderDetail> _DeliveryOrderDetails;
		
		private EntitySet<ReturOrderDetail> _ReturOrderDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnProductNameChanging(string value);
    partial void OnProductNameChanged();
    partial void OnProductTypeChanging(string value);
    partial void OnProductTypeChanged();
    partial void OnProductGroupChanging(string value);
    partial void OnProductGroupChanged();
    partial void OnProductWeightChanging(int value);
    partial void OnProductWeightChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnArticleNumberChanging(string value);
    partial void OnArticleNumberChanged();
    #endregion
		
		public Product()
		{
			this._DeliveryOrderDetails = new EntitySet<DeliveryOrderDetail>(new Action<DeliveryOrderDetail>(this.attach_DeliveryOrderDetails), new Action<DeliveryOrderDetail>(this.detach_DeliveryOrderDetails));
			this._ReturOrderDetails = new EntitySet<ReturOrderDetail>(new Action<ReturOrderDetail>(this.attach_ReturOrderDetails), new Action<ReturOrderDetail>(this.detach_ReturOrderDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProductName
		{
			get
			{
				return this._ProductName;
			}
			set
			{
				if ((this._ProductName != value))
				{
					this.OnProductNameChanging(value);
					this.SendPropertyChanging();
					this._ProductName = value;
					this.SendPropertyChanged("ProductName");
					this.OnProductNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductType", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this.OnProductTypeChanging(value);
					this.SendPropertyChanging();
					this._ProductType = value;
					this.SendPropertyChanged("ProductType");
					this.OnProductTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductGroup", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ProductGroup
		{
			get
			{
				return this._ProductGroup;
			}
			set
			{
				if ((this._ProductGroup != value))
				{
					this.OnProductGroupChanging(value);
					this.SendPropertyChanging();
					this._ProductGroup = value;
					this.SendPropertyChanged("ProductGroup");
					this.OnProductGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductWeight", DbType="Int NOT NULL")]
		public int ProductWeight
		{
			get
			{
				return this._ProductWeight;
			}
			set
			{
				if ((this._ProductWeight != value))
				{
					this.OnProductWeightChanging(value);
					this.SendPropertyChanging();
					this._ProductWeight = value;
					this.SendPropertyChanged("ProductWeight");
					this.OnProductWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleNumber", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string ArticleNumber
		{
			get
			{
				return this._ArticleNumber;
			}
			set
			{
				if ((this._ArticleNumber != value))
				{
					this.OnArticleNumberChanging(value);
					this.SendPropertyChanging();
					this._ArticleNumber = value;
					this.SendPropertyChanged("ArticleNumber");
					this.OnArticleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_DeliveryOrderDetail", Storage="_DeliveryOrderDetails", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<DeliveryOrderDetail> DeliveryOrderDetails
		{
			get
			{
				return this._DeliveryOrderDetails;
			}
			set
			{
				this._DeliveryOrderDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ReturOrderDetail", Storage="_ReturOrderDetails", ThisKey="ProductID", OtherKey="ProductID")]
		public EntitySet<ReturOrderDetail> ReturOrderDetails
		{
			get
			{
				return this._ReturOrderDetails;
			}
			set
			{
				this._ReturOrderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_DeliveryOrderDetails(DeliveryOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_ReturOrderDetails(ReturOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_ReturOrderDetails(ReturOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProductUOM")]
	public partial class ProductUOM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _iId;
		
		private string _ProductID;
		
		private string _UOM;
		
		private string _BaseUOM;
		
		private int _Quantity;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OniIdChanging(int value);
    partial void OniIdChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnBaseUOMChanging(string value);
    partial void OnBaseUOMChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public ProductUOM()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int iId
		{
			get
			{
				return this._iId;
			}
			set
			{
				if ((this._iId != value))
				{
					this.OniIdChanging(value);
					this.SendPropertyChanging();
					this._iId = value;
					this.SendPropertyChanged("iId");
					this.OniIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseUOM", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string BaseUOM
		{
			get
			{
				return this._BaseUOM;
			}
			set
			{
				if ((this._BaseUOM != value))
				{
					this.OnBaseUOMChanging(value);
					this.SendPropertyChanging();
					this._BaseUOM = value;
					this.SendPropertyChanged("BaseUOM");
					this.OnBaseUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reason")]
	public partial class Reason : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReasonID;
		
		private string _ReasonType;
		
		private string _Value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReasonIDChanging(string value);
    partial void OnReasonIDChanged();
    partial void OnReasonTypeChanging(string value);
    partial void OnReasonTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    #endregion
		
		public Reason()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReasonType
		{
			get
			{
				return this._ReasonType;
			}
			set
			{
				if ((this._ReasonType != value))
				{
					this.OnReasonTypeChanging(value);
					this.SendPropertyChanging();
					this._ReasonType = value;
					this.SendPropertyChanged("ReasonType");
					this.OnReasonTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReturOrder")]
	public partial class ReturOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReturNumber;
		
		private string _CustomerID;
		
		private string _WarehouseID;
		
		private string _EmployeeID;
		
		private string _VisitID;
		
		private string _BranchID;
		
		private System.DateTime _ReturDate;
		
		private string _ReturStatus;
		
		private string _Description;
		
		private string _Signature;
		
		private bool _IsPrint;
		
		private string _Remark;
		
		private System.DateTime _ReceivedDate;
		
		private bool _IsNewRetur;
		
		private EntitySet<ReturOrderDetail> _ReturOrderDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReturNumberChanging(string value);
    partial void OnReturNumberChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnVisitIDChanging(string value);
    partial void OnVisitIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnReturDateChanging(System.DateTime value);
    partial void OnReturDateChanged();
    partial void OnReturStatusChanging(string value);
    partial void OnReturStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnIsPrintChanging(bool value);
    partial void OnIsPrintChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnReceivedDateChanging(System.DateTime value);
    partial void OnReceivedDateChanged();
    partial void OnIsNewReturChanging(bool value);
    partial void OnIsNewReturChanged();
    #endregion
		
		public ReturOrder()
		{
			this._ReturOrderDetails = new EntitySet<ReturOrderDetail>(new Action<ReturOrderDetail>(this.attach_ReturOrderDetails), new Action<ReturOrderDetail>(this.detach_ReturOrderDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReturNumber
		{
			get
			{
				return this._ReturNumber;
			}
			set
			{
				if ((this._ReturNumber != value))
				{
					this.OnReturNumberChanging(value);
					this.SendPropertyChanging();
					this._ReturNumber = value;
					this.SendPropertyChanged("ReturNumber");
					this.OnReturNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturDate", DbType="Date NOT NULL")]
		public System.DateTime ReturDate
		{
			get
			{
				return this._ReturDate;
			}
			set
			{
				if ((this._ReturDate != value))
				{
					this.OnReturDateChanging(value);
					this.SendPropertyChanging();
					this._ReturDate = value;
					this.SendPropertyChanged("ReturDate");
					this.OnReturDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturStatus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReturStatus
		{
			get
			{
				return this._ReturStatus;
			}
			set
			{
				if ((this._ReturStatus != value))
				{
					this.OnReturStatusChanging(value);
					this.SendPropertyChanging();
					this._ReturStatus = value;
					this.SendPropertyChanged("ReturStatus");
					this.OnReturStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrint", DbType="Bit NOT NULL")]
		public bool IsPrint
		{
			get
			{
				return this._IsPrint;
			}
			set
			{
				if ((this._IsPrint != value))
				{
					this.OnIsPrintChanging(value);
					this.SendPropertyChanging();
					this._IsPrint = value;
					this.SendPropertyChanged("IsPrint");
					this.OnIsPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceivedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNewRetur", DbType="Bit NOT NULL")]
		public bool IsNewRetur
		{
			get
			{
				return this._IsNewRetur;
			}
			set
			{
				if ((this._IsNewRetur != value))
				{
					this.OnIsNewReturChanging(value);
					this.SendPropertyChanging();
					this._IsNewRetur = value;
					this.SendPropertyChanged("IsNewRetur");
					this.OnIsNewReturChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReturOrder_ReturOrderDetail", Storage="_ReturOrderDetails", ThisKey="ReturNumber", OtherKey="ReturNumber")]
		public EntitySet<ReturOrderDetail> ReturOrderDetails
		{
			get
			{
				return this._ReturOrderDetails;
			}
			set
			{
				this._ReturOrderDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReturOrderDetails(ReturOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ReturOrder = this;
		}
		
		private void detach_ReturOrderDetails(ReturOrderDetail entity)
		{
			this.SendPropertyChanging();
			entity.ReturOrder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReturOrderDetail")]
	public partial class ReturOrderDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ReturNumber;
		
		private string _ProductID;
		
		private string _UOM;
		
		private int _Quantity;
		
		private int _QuantityReal;
		
		private string _ArticleNumber;
		
		private string _ReasonID;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<ReturOrder> _ReturOrder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnReturNumberChanging(string value);
    partial void OnReturNumberChanged();
    partial void OnProductIDChanging(string value);
    partial void OnProductIDChanged();
    partial void OnUOMChanging(string value);
    partial void OnUOMChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnQuantityRealChanging(int value);
    partial void OnQuantityRealChanged();
    partial void OnArticleNumberChanging(string value);
    partial void OnArticleNumberChanged();
    partial void OnReasonIDChanging(string value);
    partial void OnReasonIDChanged();
    #endregion
		
		public ReturOrderDetail()
		{
			this._Product = default(EntityRef<Product>);
			this._ReturOrder = default(EntityRef<ReturOrder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ReturNumber
		{
			get
			{
				return this._ReturNumber;
			}
			set
			{
				if ((this._ReturNumber != value))
				{
					if (this._ReturOrder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReturNumberChanging(value);
					this.SendPropertyChanging();
					this._ReturNumber = value;
					this.SendPropertyChanged("ReturNumber");
					this.OnReturNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ProductID
		{
			get
			{
				return this._ProductID;
			}
			set
			{
				if ((this._ProductID != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIDChanging(value);
					this.SendPropertyChanging();
					this._ProductID = value;
					this.SendPropertyChanged("ProductID");
					this.OnProductIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UOM", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string UOM
		{
			get
			{
				return this._UOM;
			}
			set
			{
				if ((this._UOM != value))
				{
					this.OnUOMChanging(value);
					this.SendPropertyChanging();
					this._UOM = value;
					this.SendPropertyChanged("UOM");
					this.OnUOMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityReal", DbType="Int NOT NULL")]
		public int QuantityReal
		{
			get
			{
				return this._QuantityReal;
			}
			set
			{
				if ((this._QuantityReal != value))
				{
					this.OnQuantityRealChanging(value);
					this.SendPropertyChanging();
					this._QuantityReal = value;
					this.SendPropertyChanged("QuantityReal");
					this.OnQuantityRealChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArticleNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ArticleNumber
		{
			get
			{
				return this._ArticleNumber;
			}
			set
			{
				if ((this._ArticleNumber != value))
				{
					this.OnArticleNumberChanging(value);
					this.SendPropertyChanging();
					this._ArticleNumber = value;
					this.SendPropertyChanged("ArticleNumber");
					this.OnArticleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_ReturOrderDetail", Storage="_Product", ThisKey="ProductID", OtherKey="ProductID", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.ReturOrderDetails.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.ReturOrderDetails.Add(this);
						this._ProductID = value.ProductID;
					}
					else
					{
						this._ProductID = default(string);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReturOrder_ReturOrderDetail", Storage="_ReturOrder", ThisKey="ReturNumber", OtherKey="ReturNumber", IsForeignKey=true)]
		public ReturOrder ReturOrder
		{
			get
			{
				return this._ReturOrder.Entity;
			}
			set
			{
				ReturOrder previousValue = this._ReturOrder.Entity;
				if (((previousValue != value) 
							|| (this._ReturOrder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReturOrder.Entity = null;
						previousValue.ReturOrderDetails.Remove(this);
					}
					this._ReturOrder.Entity = value;
					if ((value != null))
					{
						value.ReturOrderDetails.Add(this);
						this._ReturNumber = value.ReturNumber;
					}
					else
					{
						this._ReturNumber = default(string);
					}
					this.SendPropertyChanged("ReturOrder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Route")]
	public partial class Route : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RouteID;
		
		private string _BranchID;
		
		private int _Day;
		
		private EntitySet<RouteDetail> _RouteDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIDChanging(string value);
    partial void OnRouteIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnDayChanging(int value);
    partial void OnDayChanged();
    #endregion
		
		public Route()
		{
			this._RouteDetails = new EntitySet<RouteDetail>(new Action<RouteDetail>(this.attach_RouteDetails), new Action<RouteDetail>(this.detach_RouteDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Day", DbType="Int NOT NULL")]
		public int Day
		{
			get
			{
				return this._Day;
			}
			set
			{
				if ((this._Day != value))
				{
					this.OnDayChanging(value);
					this.SendPropertyChanging();
					this._Day = value;
					this.SendPropertyChanged("Day");
					this.OnDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_RouteDetail", Storage="_RouteDetails", ThisKey="RouteID", OtherKey="RouteID")]
		public EntitySet<RouteDetail> RouteDetails
		{
			get
			{
				return this._RouteDetails;
			}
			set
			{
				this._RouteDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RouteDetails(RouteDetail entity)
		{
			this.SendPropertyChanging();
			entity.Route = this;
		}
		
		private void detach_RouteDetails(RouteDetail entity)
		{
			this.SendPropertyChanging();
			entity.Route = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RouteDetail")]
	public partial class RouteDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RouteID;
		
		private string _CustomerID;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Route> _Route;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRouteIDChanging(string value);
    partial void OnRouteIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    #endregion
		
		public RouteDetail()
		{
			this._Customer = default(EntityRef<Customer>);
			this._Route = default(EntityRef<Route>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RouteID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RouteID
		{
			get
			{
				return this._RouteID;
			}
			set
			{
				if ((this._RouteID != value))
				{
					if (this._Route.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRouteIDChanging(value);
					this.SendPropertyChanging();
					this._RouteID = value;
					this.SendPropertyChanged("RouteID");
					this.OnRouteIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_RouteDetail", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.RouteDetails.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.RouteDetails.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Route_RouteDetail", Storage="_Route", ThisKey="RouteID", OtherKey="RouteID", IsForeignKey=true)]
		public Route Route
		{
			get
			{
				return this._Route.Entity;
			}
			set
			{
				Route previousValue = this._Route.Entity;
				if (((previousValue != value) 
							|| (this._Route.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Route.Entity = null;
						previousValue.RouteDetails.Remove(this);
					}
					this._Route.Entity = value;
					if ((value != null))
					{
						value.RouteDetails.Add(this);
						this._RouteID = value.RouteID;
					}
					else
					{
						this._RouteID = default(string);
					}
					this.SendPropertyChanged("Route");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubVehicleType")]
	public partial class SubVehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SubVehicleTypeID;
		
		private string _SubVehicleTypeName;
		
		private string _VehicleTypeID;
		
		private EntityRef<VehicleType> _VehicleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSubVehicleTypeIDChanging(int value);
    partial void OnSubVehicleTypeIDChanged();
    partial void OnSubVehicleTypeNameChanging(string value);
    partial void OnSubVehicleTypeNameChanged();
    partial void OnVehicleTypeIDChanging(string value);
    partial void OnVehicleTypeIDChanged();
    #endregion
		
		public SubVehicleType()
		{
			this._VehicleType = default(EntityRef<VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubVehicleTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SubVehicleTypeID
		{
			get
			{
				return this._SubVehicleTypeID;
			}
			set
			{
				if ((this._SubVehicleTypeID != value))
				{
					this.OnSubVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SubVehicleTypeID = value;
					this.SendPropertyChanged("SubVehicleTypeID");
					this.OnSubVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubVehicleTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SubVehicleTypeName
		{
			get
			{
				return this._SubVehicleTypeName;
			}
			set
			{
				if ((this._SubVehicleTypeName != value))
				{
					this.OnSubVehicleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._SubVehicleTypeName = value;
					this.SendPropertyChanged("SubVehicleTypeName");
					this.OnSubVehicleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_SubVehicleType", Storage="_VehicleType", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.SubVehicleTypes.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.SubVehicleTypes.Add(this);
						this._VehicleTypeID = value.VehicleTypeID;
					}
					else
					{
						this._VehicleTypeID = default(string);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VehicleID;
		
		private string _VehicleName;
		
		private string _VehicleNumber;
		
		private System.DateTime _STNKDate;
		
		private int _YearManufacturing;
		
		private string _KIRNumber;
		
		private string _EngineNumber;
		
		private string _VehicleTypeID;
		
		private int _SubVehicleTypeID;
		
		private decimal _CapacityVolume;
		
		private decimal _CapacityWeight;
		
		private string _Brand;
		
		private EntitySet<LiveTracking> _LiveTrackings;
		
		private EntityRef<VehicleType> _VehicleType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleIDChanging(string value);
    partial void OnVehicleIDChanged();
    partial void OnVehicleNameChanging(string value);
    partial void OnVehicleNameChanged();
    partial void OnVehicleNumberChanging(string value);
    partial void OnVehicleNumberChanged();
    partial void OnSTNKDateChanging(System.DateTime value);
    partial void OnSTNKDateChanged();
    partial void OnYearManufacturingChanging(int value);
    partial void OnYearManufacturingChanged();
    partial void OnKIRNumberChanging(string value);
    partial void OnKIRNumberChanged();
    partial void OnEngineNumberChanging(string value);
    partial void OnEngineNumberChanged();
    partial void OnVehicleTypeIDChanging(string value);
    partial void OnVehicleTypeIDChanged();
    partial void OnSubVehicleTypeIDChanging(int value);
    partial void OnSubVehicleTypeIDChanged();
    partial void OnCapacityVolumeChanging(decimal value);
    partial void OnCapacityVolumeChanged();
    partial void OnCapacityWeightChanging(decimal value);
    partial void OnCapacityWeightChanged();
    partial void OnBrandChanging(string value);
    partial void OnBrandChanged();
    #endregion
		
		public Vehicle()
		{
			this._LiveTrackings = new EntitySet<LiveTracking>(new Action<LiveTracking>(this.attach_LiveTrackings), new Action<LiveTracking>(this.detach_LiveTrackings));
			this._VehicleType = default(EntityRef<VehicleType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleName
		{
			get
			{
				return this._VehicleName;
			}
			set
			{
				if ((this._VehicleName != value))
				{
					this.OnVehicleNameChanging(value);
					this.SendPropertyChanging();
					this._VehicleName = value;
					this.SendPropertyChanged("VehicleName");
					this.OnVehicleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleNumber
		{
			get
			{
				return this._VehicleNumber;
			}
			set
			{
				if ((this._VehicleNumber != value))
				{
					this.OnVehicleNumberChanging(value);
					this.SendPropertyChanging();
					this._VehicleNumber = value;
					this.SendPropertyChanged("VehicleNumber");
					this.OnVehicleNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STNKDate", DbType="DateTime NOT NULL")]
		public System.DateTime STNKDate
		{
			get
			{
				return this._STNKDate;
			}
			set
			{
				if ((this._STNKDate != value))
				{
					this.OnSTNKDateChanging(value);
					this.SendPropertyChanging();
					this._STNKDate = value;
					this.SendPropertyChanged("STNKDate");
					this.OnSTNKDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_YearManufacturing", DbType="Int NOT NULL")]
		public int YearManufacturing
		{
			get
			{
				return this._YearManufacturing;
			}
			set
			{
				if ((this._YearManufacturing != value))
				{
					this.OnYearManufacturingChanging(value);
					this.SendPropertyChanging();
					this._YearManufacturing = value;
					this.SendPropertyChanged("YearManufacturing");
					this.OnYearManufacturingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KIRNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string KIRNumber
		{
			get
			{
				return this._KIRNumber;
			}
			set
			{
				if ((this._KIRNumber != value))
				{
					this.OnKIRNumberChanging(value);
					this.SendPropertyChanging();
					this._KIRNumber = value;
					this.SendPropertyChanged("KIRNumber");
					this.OnKIRNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EngineNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EngineNumber
		{
			get
			{
				return this._EngineNumber;
			}
			set
			{
				if ((this._EngineNumber != value))
				{
					this.OnEngineNumberChanging(value);
					this.SendPropertyChanging();
					this._EngineNumber = value;
					this.SendPropertyChanged("EngineNumber");
					this.OnEngineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					if (this._VehicleType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SubVehicleTypeID", DbType="Int NOT NULL")]
		public int SubVehicleTypeID
		{
			get
			{
				return this._SubVehicleTypeID;
			}
			set
			{
				if ((this._SubVehicleTypeID != value))
				{
					this.OnSubVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._SubVehicleTypeID = value;
					this.SendPropertyChanged("SubVehicleTypeID");
					this.OnSubVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityVolume", DbType="Decimal(18,0) NOT NULL")]
		public decimal CapacityVolume
		{
			get
			{
				return this._CapacityVolume;
			}
			set
			{
				if ((this._CapacityVolume != value))
				{
					this.OnCapacityVolumeChanging(value);
					this.SendPropertyChanging();
					this._CapacityVolume = value;
					this.SendPropertyChanged("CapacityVolume");
					this.OnCapacityVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityWeight", DbType="Decimal(18,0) NOT NULL")]
		public decimal CapacityWeight
		{
			get
			{
				return this._CapacityWeight;
			}
			set
			{
				if ((this._CapacityWeight != value))
				{
					this.OnCapacityWeightChanging(value);
					this.SendPropertyChanging();
					this._CapacityWeight = value;
					this.SendPropertyChanged("CapacityWeight");
					this.OnCapacityWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this.OnBrandChanging(value);
					this.SendPropertyChanging();
					this._Brand = value;
					this.SendPropertyChanged("Brand");
					this.OnBrandChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_LiveTracking", Storage="_LiveTrackings", ThisKey="VehicleID", OtherKey="VehicleID")]
		public EntitySet<LiveTracking> LiveTrackings
		{
			get
			{
				return this._LiveTrackings;
			}
			set
			{
				this._LiveTrackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_Vehicle", Storage="_VehicleType", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID", IsForeignKey=true)]
		public VehicleType VehicleType
		{
			get
			{
				return this._VehicleType.Entity;
			}
			set
			{
				VehicleType previousValue = this._VehicleType.Entity;
				if (((previousValue != value) 
							|| (this._VehicleType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VehicleType.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._VehicleType.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._VehicleTypeID = value.VehicleTypeID;
					}
					else
					{
						this._VehicleTypeID = default(string);
					}
					this.SendPropertyChanged("VehicleType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LiveTrackings(LiveTracking entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_LiveTrackings(LiveTracking entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VehicleType")]
	public partial class VehicleType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VehicleTypeID;
		
		private string _VehicleTypeName;
		
		private EntitySet<SubVehicleType> _SubVehicleTypes;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicleTypeIDChanging(string value);
    partial void OnVehicleTypeIDChanged();
    partial void OnVehicleTypeNameChanging(string value);
    partial void OnVehicleTypeNameChanged();
    #endregion
		
		public VehicleType()
		{
			this._SubVehicleTypes = new EntitySet<SubVehicleType>(new Action<SubVehicleType>(this.attach_SubVehicleTypes), new Action<SubVehicleType>(this.detach_SubVehicleTypes));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VehicleTypeID
		{
			get
			{
				return this._VehicleTypeID;
			}
			set
			{
				if ((this._VehicleTypeID != value))
				{
					this.OnVehicleTypeIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeID = value;
					this.SendPropertyChanged("VehicleTypeID");
					this.OnVehicleTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleTypeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleTypeName
		{
			get
			{
				return this._VehicleTypeName;
			}
			set
			{
				if ((this._VehicleTypeName != value))
				{
					this.OnVehicleTypeNameChanging(value);
					this.SendPropertyChanging();
					this._VehicleTypeName = value;
					this.SendPropertyChanged("VehicleTypeName");
					this.OnVehicleTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_SubVehicleType", Storage="_SubVehicleTypes", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID")]
		public EntitySet<SubVehicleType> SubVehicleTypes
		{
			get
			{
				return this._SubVehicleTypes;
			}
			set
			{
				this._SubVehicleTypes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VehicleType_Vehicle", Storage="_Vehicles", ThisKey="VehicleTypeID", OtherKey="VehicleTypeID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SubVehicleTypes(SubVehicleType entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_SubVehicleTypes(SubVehicleType entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.VehicleType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VisitDetail")]
	public partial class VisitDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VisitID;
		
		private string _CustomerID;
		
		private string _WarehouseID;
		
		private bool _isStart;
		
		private bool _isFinish;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private string _ReasonID;
		
		private string _ReasonDescription;
		
		private string _Longitude;
		
		private string _Latitude;
		
		private bool _isDeliver;
		
		private bool _isInRange;
		
		private decimal _Distance;
		
		private EntityRef<Customer> _Customer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIDChanging(string value);
    partial void OnVisitIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnisStartChanging(bool value);
    partial void OnisStartChanged();
    partial void OnisFinishChanging(bool value);
    partial void OnisFinishChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnReasonIDChanging(string value);
    partial void OnReasonIDChanged();
    partial void OnReasonDescriptionChanging(string value);
    partial void OnReasonDescriptionChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnisDeliverChanging(bool value);
    partial void OnisDeliverChanged();
    partial void OnisInRangeChanging(bool value);
    partial void OnisInRangeChanged();
    partial void OnDistanceChanging(decimal value);
    partial void OnDistanceChanged();
    #endregion
		
		public VisitDetail()
		{
			this._Customer = default(EntityRef<Customer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isStart", DbType="Bit NOT NULL")]
		public bool isStart
		{
			get
			{
				return this._isStart;
			}
			set
			{
				if ((this._isStart != value))
				{
					this.OnisStartChanging(value);
					this.SendPropertyChanging();
					this._isStart = value;
					this.SendPropertyChanged("isStart");
					this.OnisStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFinish", DbType="Bit NOT NULL")]
		public bool isFinish
		{
			get
			{
				return this._isFinish;
			}
			set
			{
				if ((this._isFinish != value))
				{
					this.OnisFinishChanging(value);
					this.SendPropertyChanging();
					this._isFinish = value;
					this.SendPropertyChanged("isFinish");
					this.OnisFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ReasonID
		{
			get
			{
				return this._ReasonID;
			}
			set
			{
				if ((this._ReasonID != value))
				{
					this.OnReasonIDChanging(value);
					this.SendPropertyChanging();
					this._ReasonID = value;
					this.SendPropertyChanged("ReasonID");
					this.OnReasonIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReasonDescription", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ReasonDescription
		{
			get
			{
				return this._ReasonDescription;
			}
			set
			{
				if ((this._ReasonDescription != value))
				{
					this.OnReasonDescriptionChanging(value);
					this.SendPropertyChanging();
					this._ReasonDescription = value;
					this.SendPropertyChanged("ReasonDescription");
					this.OnReasonDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeliver", DbType="Bit NOT NULL")]
		public bool isDeliver
		{
			get
			{
				return this._isDeliver;
			}
			set
			{
				if ((this._isDeliver != value))
				{
					this.OnisDeliverChanging(value);
					this.SendPropertyChanging();
					this._isDeliver = value;
					this.SendPropertyChanged("isDeliver");
					this.OnisDeliverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isInRange", DbType="Bit NOT NULL")]
		public bool isInRange
		{
			get
			{
				return this._isInRange;
			}
			set
			{
				if ((this._isInRange != value))
				{
					this.OnisInRangeChanging(value);
					this.SendPropertyChanging();
					this._isInRange = value;
					this.SendPropertyChanged("isInRange");
					this.OnisInRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Distance", DbType="Decimal(18,2) NOT NULL")]
		public decimal Distance
		{
			get
			{
				return this._Distance;
			}
			set
			{
				if ((this._Distance != value))
				{
					this.OnDistanceChanging(value);
					this.SendPropertyChanging();
					this._Distance = value;
					this.SendPropertyChanged("Distance");
					this.OnDistanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_VisitDetail", Storage="_Customer", ThisKey="CustomerID", OtherKey="CustomerID", IsForeignKey=true)]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.VisitDetails.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.VisitDetails.Add(this);
						this._CustomerID = value.CustomerID;
					}
					else
					{
						this._CustomerID = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Menu")]
	public partial class Menu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MenuID;
		
		private string _MenuName;
		
		private string _MenuUrl;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMenuIDChanging(string value);
    partial void OnMenuIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuUrlChanging(string value);
    partial void OnMenuUrlChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Menu()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuUrl", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string MenuUrl
		{
			get
			{
				return this._MenuUrl;
			}
			set
			{
				if ((this._MenuUrl != value))
				{
					this.OnMenuUrlChanging(value);
					this.SendPropertyChanging();
					this._MenuUrl = value;
					this.SendPropertyChanged("MenuUrl");
					this.OnMenuUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _UserID;
		
		private string _Password;
		
		private string _BranchID;
		
		private string _RoleID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(string value);
    partial void OnUserIDChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Role")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _RoleName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    #endregion
		
		public Role()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MobileConfig")]
	public partial class MobileConfig : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BranchId;
		
		private string _ID;
		
		private string _Desc;
		
		private string _Value;
		
		private string _TypeValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIdChanging(string value);
    partial void OnBranchIdChanged();
    partial void OnIDChanging(string value);
    partial void OnIDChanged();
    partial void OnDescChanging(string value);
    partial void OnDescChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTypeValueChanging(string value);
    partial void OnTypeValueChanged();
    #endregion
		
		public MobileConfig()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Desc]", Storage="_Desc", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Desc
		{
			get
			{
				return this._Desc;
			}
			set
			{
				if ((this._Desc != value))
				{
					this.OnDescChanging(value);
					this.SendPropertyChanging();
					this._Desc = value;
					this.SendPropertyChanged("Desc");
					this.OnDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TypeValue
		{
			get
			{
				return this._TypeValue;
			}
			set
			{
				if ((this._TypeValue != value))
				{
					this.OnTypeValueChanging(value);
					this.SendPropertyChanging();
					this._TypeValue = value;
					this.SendPropertyChanged("TypeValue");
					this.OnTypeValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cost")]
	public partial class Cost : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CostID;
		
		private string _CostName;
		
		private string _Type;
		
		private EntitySet<DailyCost> _DailyCosts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCostIDChanging(string value);
    partial void OnCostIDChanged();
    partial void OnCostNameChanging(string value);
    partial void OnCostNameChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public Cost()
		{
			this._DailyCosts = new EntitySet<DailyCost>(new Action<DailyCost>(this.attach_DailyCosts), new Action<DailyCost>(this.detach_DailyCosts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CostID
		{
			get
			{
				return this._CostID;
			}
			set
			{
				if ((this._CostID != value))
				{
					this.OnCostIDChanging(value);
					this.SendPropertyChanging();
					this._CostID = value;
					this.SendPropertyChanged("CostID");
					this.OnCostIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string CostName
		{
			get
			{
				return this._CostName;
			}
			set
			{
				if ((this._CostName != value))
				{
					this.OnCostNameChanging(value);
					this.SendPropertyChanging();
					this._CostName = value;
					this.SendPropertyChanged("CostName");
					this.OnCostNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cost_DailyCost", Storage="_DailyCosts", ThisKey="CostID", OtherKey="CostID")]
		public EntitySet<DailyCost> DailyCosts
		{
			get
			{
				return this._DailyCosts;
			}
			set
			{
				this._DailyCosts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DailyCosts(DailyCost entity)
		{
			this.SendPropertyChanging();
			entity.Cost = this;
		}
		
		private void detach_DailyCosts(DailyCost entity)
		{
			this.SendPropertyChanging();
			entity.Cost = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessRole")]
	public partial class AccessRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _MenuID;
		
		private bool _IsAccess;
		
		private bool _IsModify;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnMenuIDChanging(string value);
    partial void OnMenuIDChanged();
    partial void OnIsAccessChanging(bool value);
    partial void OnIsAccessChanged();
    partial void OnIsModifyChanging(bool value);
    partial void OnIsModifyChanged();
    #endregion
		
		public AccessRole()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAccess", DbType="Bit NOT NULL")]
		public bool IsAccess
		{
			get
			{
				return this._IsAccess;
			}
			set
			{
				if ((this._IsAccess != value))
				{
					this.OnIsAccessChanging(value);
					this.SendPropertyChanging();
					this._IsAccess = value;
					this.SendPropertyChanged("IsAccess");
					this.OnIsAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsModify", DbType="Bit NOT NULL")]
		public bool IsModify
		{
			get
			{
				return this._IsModify;
			}
			set
			{
				if ((this._IsModify != value))
				{
					this.OnIsModifyChanging(value);
					this.SendPropertyChanging();
					this._IsModify = value;
					this.SendPropertyChanged("IsModify");
					this.OnIsModifyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Visit")]
	public partial class Visit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VisitID;
		
		private string _BranchID;
		
		private string _EmployeeID;
		
		private string _VehicleID;
		
		private System.DateTime _VisitDate;
		
		private bool _isStart;
		
		private bool _isFinish;
		
		private System.DateTime _StartDate;
		
		private System.DateTime _EndDate;
		
		private int _KMStart;
		
		private int _KMFinish;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _LastUpdatedBy;
		
		private System.Nullable<System.DateTime> _LastUpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVisitIDChanging(string value);
    partial void OnVisitIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnVehicleIDChanging(string value);
    partial void OnVehicleIDChanged();
    partial void OnVisitDateChanging(System.DateTime value);
    partial void OnVisitDateChanged();
    partial void OnisStartChanging(bool value);
    partial void OnisStartChanged();
    partial void OnisFinishChanging(bool value);
    partial void OnisFinishChanged();
    partial void OnStartDateChanging(System.DateTime value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.DateTime value);
    partial void OnEndDateChanged();
    partial void OnKMStartChanging(int value);
    partial void OnKMStartChanged();
    partial void OnKMFinishChanging(int value);
    partial void OnKMFinishChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnLastUpdatedByChanging(string value);
    partial void OnLastUpdatedByChanged();
    partial void OnLastUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedDateChanged();
    #endregion
		
		public Visit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitDate", DbType="Date NOT NULL")]
		public System.DateTime VisitDate
		{
			get
			{
				return this._VisitDate;
			}
			set
			{
				if ((this._VisitDate != value))
				{
					this.OnVisitDateChanging(value);
					this.SendPropertyChanging();
					this._VisitDate = value;
					this.SendPropertyChanged("VisitDate");
					this.OnVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isStart", DbType="Bit NOT NULL")]
		public bool isStart
		{
			get
			{
				return this._isStart;
			}
			set
			{
				if ((this._isStart != value))
				{
					this.OnisStartChanging(value);
					this.SendPropertyChanging();
					this._isStart = value;
					this.SendPropertyChanged("isStart");
					this.OnisStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isFinish", DbType="Bit NOT NULL")]
		public bool isFinish
		{
			get
			{
				return this._isFinish;
			}
			set
			{
				if ((this._isFinish != value))
				{
					this.OnisFinishChanging(value);
					this.SendPropertyChanging();
					this._isFinish = value;
					this.SendPropertyChanged("isFinish");
					this.OnisFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="DateTime NOT NULL")]
		public System.DateTime StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="DateTime NOT NULL")]
		public System.DateTime EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KMStart", DbType="Int NOT NULL")]
		public int KMStart
		{
			get
			{
				return this._KMStart;
			}
			set
			{
				if ((this._KMStart != value))
				{
					this.OnKMStartChanging(value);
					this.SendPropertyChanging();
					this._KMStart = value;
					this.SendPropertyChanged("KMStart");
					this.OnKMStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KMFinish", DbType="Int NOT NULL")]
		public int KMFinish
		{
			get
			{
				return this._KMFinish;
			}
			set
			{
				if ((this._KMFinish != value))
				{
					this.OnKMFinishChanging(value);
					this.SendPropertyChanging();
					this._KMFinish = value;
					this.SendPropertyChanged("KMFinish");
					this.OnKMFinishChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedBy", DbType="NVarChar(50)")]
		public string LastUpdatedBy
		{
			get
			{
				return this._LastUpdatedBy;
			}
			set
			{
				if ((this._LastUpdatedBy != value))
				{
					this.OnLastUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedBy = value;
					this.SendPropertyChanged("LastUpdatedBy");
					this.OnLastUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedDate
		{
			get
			{
				return this._LastUpdatedDate;
			}
			set
			{
				if ((this._LastUpdatedDate != value))
				{
					this.OnLastUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedDate = value;
					this.SendPropertyChanged("LastUpdatedDate");
					this.OnLastUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DeliveryOrder")]
	public partial class DeliveryOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DONumber;
		
		private string _CallPlanID;
		
		private string _CustomerID;
		
		private string _WarehouseID;
		
		private string _EmployeeID;
		
		private string _BranchID;
		
		private string _VisitID;
		
		private string _VehicleID;
		
		private System.DateTime _DODate;
		
		private string _DOStatus;
		
		private string _Description;
		
		private string _Signature;
		
		private bool _IsPrint;
		
		private string _Remark;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _LastDate;
		
		private string _CreatedBy;
		
		private string _LastUpdateBy;
		
		private System.Nullable<System.DateTime> _SendDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDONumberChanging(string value);
    partial void OnDONumberChanged();
    partial void OnCallPlanIDChanging(string value);
    partial void OnCallPlanIDChanged();
    partial void OnCustomerIDChanging(string value);
    partial void OnCustomerIDChanged();
    partial void OnWarehouseIDChanging(string value);
    partial void OnWarehouseIDChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnVisitIDChanging(string value);
    partial void OnVisitIDChanged();
    partial void OnVehicleIDChanging(string value);
    partial void OnVehicleIDChanged();
    partial void OnDODateChanging(System.DateTime value);
    partial void OnDODateChanged();
    partial void OnDOStatusChanging(string value);
    partial void OnDOStatusChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSignatureChanging(string value);
    partial void OnSignatureChanged();
    partial void OnIsPrintChanging(bool value);
    partial void OnIsPrintChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnLastDateChanging(System.DateTime value);
    partial void OnLastDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnLastUpdateByChanging(string value);
    partial void OnLastUpdateByChanged();
    partial void OnSendDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSendDateChanged();
    #endregion
		
		public DeliveryOrder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DONumber
		{
			get
			{
				return this._DONumber;
			}
			set
			{
				if ((this._DONumber != value))
				{
					this.OnDONumberChanging(value);
					this.SendPropertyChanging();
					this._DONumber = value;
					this.SendPropertyChanged("DONumber");
					this.OnDONumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CallPlanID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CallPlanID
		{
			get
			{
				return this._CallPlanID;
			}
			set
			{
				if ((this._CallPlanID != value))
				{
					this.OnCallPlanIDChanging(value);
					this.SendPropertyChanging();
					this._CallPlanID = value;
					this.SendPropertyChanged("CallPlanID");
					this.OnCallPlanIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerID
		{
			get
			{
				return this._CustomerID;
			}
			set
			{
				if ((this._CustomerID != value))
				{
					this.OnCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._CustomerID = value;
					this.SendPropertyChanged("CustomerID");
					this.OnCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string WarehouseID
		{
			get
			{
				return this._WarehouseID;
			}
			set
			{
				if ((this._WarehouseID != value))
				{
					this.OnWarehouseIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseID = value;
					this.SendPropertyChanged("WarehouseID");
					this.OnWarehouseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VisitID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VisitID
		{
			get
			{
				return this._VisitID;
			}
			set
			{
				if ((this._VisitID != value))
				{
					this.OnVisitIDChanging(value);
					this.SendPropertyChanging();
					this._VisitID = value;
					this.SendPropertyChanged("VisitID");
					this.OnVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VehicleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string VehicleID
		{
			get
			{
				return this._VehicleID;
			}
			set
			{
				if ((this._VehicleID != value))
				{
					this.OnVehicleIDChanging(value);
					this.SendPropertyChanging();
					this._VehicleID = value;
					this.SendPropertyChanged("VehicleID");
					this.OnVehicleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DODate", DbType="DateTime NOT NULL")]
		public System.DateTime DODate
		{
			get
			{
				return this._DODate;
			}
			set
			{
				if ((this._DODate != value))
				{
					this.OnDODateChanging(value);
					this.SendPropertyChanging();
					this._DODate = value;
					this.SendPropertyChanged("DODate");
					this.OnDODateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOStatus", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DOStatus
		{
			get
			{
				return this._DOStatus;
			}
			set
			{
				if ((this._DOStatus != value))
				{
					this.OnDOStatusChanging(value);
					this.SendPropertyChanging();
					this._DOStatus = value;
					this.SendPropertyChanged("DOStatus");
					this.OnDOStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Signature", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Signature
		{
			get
			{
				return this._Signature;
			}
			set
			{
				if ((this._Signature != value))
				{
					this.OnSignatureChanging(value);
					this.SendPropertyChanging();
					this._Signature = value;
					this.SendPropertyChanged("Signature");
					this.OnSignatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPrint", DbType="Bit NOT NULL")]
		public bool IsPrint
		{
			get
			{
				return this._IsPrint;
			}
			set
			{
				if ((this._IsPrint != value))
				{
					this.OnIsPrintChanging(value);
					this.SendPropertyChanging();
					this._IsPrint = value;
					this.SendPropertyChanged("IsPrint");
					this.OnIsPrintChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Remark
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.OnRemarkChanging(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("Remark");
					this.OnRemarkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastDate
		{
			get
			{
				return this._LastDate;
			}
			set
			{
				if ((this._LastDate != value))
				{
					this.OnLastDateChanging(value);
					this.SendPropertyChanging();
					this._LastDate = value;
					this.SendPropertyChanged("LastDate");
					this.OnLastDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastUpdateBy
		{
			get
			{
				return this._LastUpdateBy;
			}
			set
			{
				if ((this._LastUpdateBy != value))
				{
					this.OnLastUpdateByChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateBy = value;
					this.SendPropertyChanged("LastUpdateBy");
					this.OnLastUpdateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SendDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SendDate
		{
			get
			{
				return this._SendDate;
			}
			set
			{
				if ((this._SendDate != value))
				{
					this.OnSendDateChanging(value);
					this.SendPropertyChanging();
					this._SendDate = value;
					this.SendPropertyChanged("SendDate");
					this.OnSendDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AccountID;
		
		private string _AccountName;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(string value);
    partial void OnAccountIDChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Account()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BranchID;
		
		private string _BranchName;
		
		private string _BranchDescription;
		
		private string _CompanyID;
		
		private string _Latitude;
		
		private string _Longitude;
		
		private string _City;
		
		private string _PostCode;
		
		private string _CountryRegionCode;
		
		private string _Phone;
		
		private string _Fax;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBranchIDChanging(string value);
    partial void OnBranchIDChanged();
    partial void OnBranchNameChanging(string value);
    partial void OnBranchNameChanged();
    partial void OnBranchDescriptionChanging(string value);
    partial void OnBranchDescriptionChanged();
    partial void OnCompanyIDChanging(string value);
    partial void OnCompanyIDChanged();
    partial void OnLatitudeChanging(string value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(string value);
    partial void OnLongitudeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnCountryRegionCodeChanging(string value);
    partial void OnCountryRegionCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnFaxChanging(string value);
    partial void OnFaxChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BranchID
		{
			get
			{
				return this._BranchID;
			}
			set
			{
				if ((this._BranchID != value))
				{
					this.OnBranchIDChanging(value);
					this.SendPropertyChanging();
					this._BranchID = value;
					this.SendPropertyChanged("BranchID");
					this.OnBranchIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string BranchName
		{
			get
			{
				return this._BranchName;
			}
			set
			{
				if ((this._BranchName != value))
				{
					this.OnBranchNameChanging(value);
					this.SendPropertyChanging();
					this._BranchName = value;
					this.SendPropertyChanged("BranchName");
					this.OnBranchNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchDescription", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string BranchDescription
		{
			get
			{
				return this._BranchDescription;
			}
			set
			{
				if ((this._BranchDescription != value))
				{
					this.OnBranchDescriptionChanging(value);
					this.SendPropertyChanging();
					this._BranchDescription = value;
					this.SendPropertyChanged("BranchDescription");
					this.OnBranchDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyID", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CompanyID
		{
			get
			{
				return this._CompanyID;
			}
			set
			{
				if ((this._CompanyID != value))
				{
					this.OnCompanyIDChanging(value);
					this.SendPropertyChanging();
					this._CompanyID = value;
					this.SendPropertyChanged("CompanyID");
					this.OnCompanyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PostCode
		{
			get
			{
				return this._PostCode;
			}
			set
			{
				if ((this._PostCode != value))
				{
					this.OnPostCodeChanging(value);
					this.SendPropertyChanging();
					this._PostCode = value;
					this.SendPropertyChanged("PostCode");
					this.OnPostCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryRegionCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CountryRegionCode
		{
			get
			{
				return this._CountryRegionCode;
			}
			set
			{
				if ((this._CountryRegionCode != value))
				{
					this.OnCountryRegionCodeChanging(value);
					this.SendPropertyChanging();
					this._CountryRegionCode = value;
					this.SendPropertyChanged("CountryRegionCode");
					this.OnCountryRegionCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fax", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Fax
		{
			get
			{
				return this._Fax;
			}
			set
			{
				if ((this._Fax != value))
				{
					this.OnFaxChanging(value);
					this.SendPropertyChanging();
					this._Fax = value;
					this.SendPropertyChanged("Fax");
					this.OnFaxChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Distributor")]
	public partial class Distributor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DistributorID;
		
		private string _DistributorName;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDistributorIDChanging(string value);
    partial void OnDistributorIDChanged();
    partial void OnDistributorNameChanging(string value);
    partial void OnDistributorNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Distributor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DistributorID
		{
			get
			{
				return this._DistributorID;
			}
			set
			{
				if ((this._DistributorID != value))
				{
					this.OnDistributorIDChanging(value);
					this.SendPropertyChanging();
					this._DistributorID = value;
					this.SendPropertyChanged("DistributorID");
					this.OnDistributorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DistributorName", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string DistributorName
		{
			get
			{
				return this._DistributorName;
			}
			set
			{
				if ((this._DistributorName != value))
				{
					this.OnDistributorNameChanging(value);
					this.SendPropertyChanging();
					this._DistributorName = value;
					this.SendPropertyChanged("DistributorName");
					this.OnDistributorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AccessRoleMobile")]
	public partial class AccessRoleMobile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _RoleID;
		
		private string _MenuID;
		
		private bool _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRoleIDChanging(string value);
    partial void OnRoleIDChanged();
    partial void OnMenuIDChanging(string value);
    partial void OnMenuIDChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public AccessRoleMobile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MenuID", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
